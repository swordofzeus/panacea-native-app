"""initial migration

Revision ID: 82f3a64b43eb
Revises: 
Create Date: 2024-12-17 17:57:39.087181

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '82f3a64b43eb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('studies',
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('brief_title', sa.String(), nullable=False),
    sa.Column('official_title', sa.String(), nullable=True),
    sa.Column('overall_status', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('completion_date', sa.Date(), nullable=True),
    sa.Column('primary_completion_date', sa.Date(), nullable=True),
    sa.Column('has_results', sa.Boolean(), nullable=True),
    sa.Column('organization', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('study_id')
    )
    op.create_table('adverse_event_groups',
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('serious_num_affected', sa.Integer(), nullable=True),
    sa.Column('serious_num_at_risk', sa.Integer(), nullable=True),
    sa.Column('other_num_affected', sa.Integer(), nullable=True),
    sa.Column('other_num_at_risk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_id', 'id')
    )
    op.create_table('baseline_characteristics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('study_id', sa.String(), nullable=True),
    sa.Column('population_description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contacts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('organization', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interventions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('id', 'study_id')
    )
    op.create_table('outcomes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('measure', sa.Text(), nullable=False),
    sa.Column('time_frame', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participant_groups',
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_id', 'id')
    )
    op.create_table('participants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('age_category', sa.String(), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('study_arms',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('study_conditions',
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('condition', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_id', 'condition')
    )
    op.create_table('study_keywords',
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('keyword', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_id', 'keyword')
    )
    op.create_table('study_phases',
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('phase', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_id', 'phase')
    )
    op.create_table('adverse_events',
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('group_id', sa.String(), nullable=False),
    sa.Column('term', sa.String(), nullable=False),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('organ_system', sa.String(), nullable=True),
    sa.Column('assessment_type', sa.String(), nullable=True),
    sa.Column('num_events', sa.Integer(), nullable=True),
    sa.Column('num_affected', sa.Integer(), nullable=True),
    sa.Column('num_at_risk', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['study_id', 'group_id'], ['adverse_event_groups.study_id', 'adverse_event_groups.id'], ),
    sa.PrimaryKeyConstraint('study_id', 'group_id', 'term')
    )
    op.create_table('participant_demographics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('study_id', sa.String(), nullable=True),
    sa.Column('group_id', sa.String(), nullable=True),
    sa.Column('measure_title', sa.String(), nullable=True),
    sa.Column('param_type', sa.String(), nullable=True),
    sa.Column('dispersion_type', sa.String(), nullable=True),
    sa.Column('unit_of_measure', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('spread', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['study_id', 'group_id'], ['participant_groups.study_id', 'participant_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participant_denoms',
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('group_id', sa.String(), nullable=False),
    sa.Column('units', sa.String(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['study_id', 'group_id'], ['participant_groups.study_id', 'participant_groups.id'], ),
    sa.PrimaryKeyConstraint('study_id', 'group_id')
    )
    op.create_table('participant_statistics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('study_id', sa.String(), nullable=True),
    sa.Column('group_id', sa.String(), nullable=True),
    sa.Column('measure_title', sa.String(), nullable=True),
    sa.Column('param_type', sa.String(), nullable=True),
    sa.Column('dispersion_type', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('spread', sa.Float(), nullable=True),
    sa.Column('unit_of_measure', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['study_id', 'group_id'], ['participant_groups.study_id', 'participant_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('time_series_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('study_id', sa.String(), nullable=False),
    sa.Column('outcome_id', sa.String(), nullable=False),
    sa.Column('group_id', sa.String(), nullable=False),
    sa.Column('time_frame', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('lower_limit', sa.Float(), nullable=True),
    sa.Column('upper_limit', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['outcome_id'], ['outcomes.id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('time_series_data')
    op.drop_table('participant_statistics')
    op.drop_table('participant_denoms')
    op.drop_table('participant_demographics')
    op.drop_table('adverse_events')
    op.drop_table('study_phases')
    op.drop_table('study_keywords')
    op.drop_table('study_conditions')
    op.drop_table('study_arms')
    op.drop_table('participants')
    op.drop_table('participant_groups')
    op.drop_table('outcomes')
    op.drop_table('interventions')
    op.drop_table('groups')
    op.drop_table('contacts')
    op.drop_table('baseline_characteristics')
    op.drop_table('adverse_event_groups')
    op.drop_table('studies')
    # ### end Alembic commands ###