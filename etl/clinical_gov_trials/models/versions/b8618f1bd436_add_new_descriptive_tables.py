"""Add new descriptive tables

Revision ID: b8618f1bd436
Revises: a3b179dcde51
Create Date: 2025-01-23 13:29:36.253073

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b8618f1bd436'
down_revision = 'a3b179dcde51'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('test')
    # op.drop_table('medications')
    # op.drop_table('metrics')
    # op.alter_column('adverse_events', 'severity',
    #            existing_type=sa.VARCHAR(),
    #            nullable=True)
    # op.alter_column('interventions', 'description',
    #            existing_type=sa.TEXT(),
    #            nullable=True)
    op.drop_constraint('medication_metric_metric_id_fkey', 'medication_metric', type_='foreignkey')
    op.drop_constraint('medication_metric_medication_id_fkey', 'medication_metric', type_='foreignkey')
    op.create_foreign_key(None, 'medication_metric', 'medication_catalog', ['medication_id'], ['id'])
    op.create_foreign_key(None, 'medication_metric', 'patient_metrics', ['metric_id'], ['id'])
    op.drop_constraint('questions_metric_id_fkey', 'questions', type_='foreignkey')
    op.drop_constraint('questions_medication_id_fkey', 'questions', type_='foreignkey')
    op.create_foreign_key(None, 'questions', 'patient_metrics', ['metric_id'], ['id'])
    op.create_foreign_key(None, 'questions', 'medication_catalog', ['medication_id'], ['id'])
    op.drop_constraint('responses_metric_id_fkey', 'responses', type_='foreignkey')
    op.drop_constraint('responses_medication_id_fkey', 'responses', type_='foreignkey')
    op.create_foreign_key(None, 'responses', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'responses', 'medication_catalog', ['medication_id'], ['id'])
    op.create_foreign_key(None, 'responses', 'patient_metrics', ['metric_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'responses', type_='foreignkey')
    op.drop_constraint(None, 'responses', type_='foreignkey')
    op.drop_constraint(None, 'responses', type_='foreignkey')
    op.create_foreign_key('responses_medication_id_fkey', 'responses', 'medications', ['medication_id'], ['id'])
    op.create_foreign_key('responses_metric_id_fkey', 'responses', 'metrics', ['metric_id'], ['id'])
    op.drop_constraint(None, 'questions', type_='foreignkey')
    op.drop_constraint(None, 'questions', type_='foreignkey')
    op.create_foreign_key('questions_medication_id_fkey', 'questions', 'medications', ['medication_id'], ['id'])
    op.create_foreign_key('questions_metric_id_fkey', 'questions', 'metrics', ['metric_id'], ['id'])
    op.drop_constraint(None, 'medication_metric', type_='foreignkey')
    op.drop_constraint(None, 'medication_metric', type_='foreignkey')
    op.create_foreign_key('medication_metric_medication_id_fkey', 'medication_metric', 'medications', ['medication_id'], ['id'])
    op.create_foreign_key('medication_metric_metric_id_fkey', 'medication_metric', 'metrics', ['metric_id'], ['id'])
    op.alter_column('interventions', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('adverse_events', 'severity',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('metrics',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='metrics_pkey'),
    sa.UniqueConstraint('name', name='metrics_name_key')
    )
    op.create_table('medications',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='medications_pkey'),
    sa.UniqueConstraint('name', name='medications_name_key')
    )
    op.create_table('test',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='test_pkey')
    )
    # ### end Alembic commands ###